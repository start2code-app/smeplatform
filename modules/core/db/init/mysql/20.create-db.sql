-- begin GCSPLATFORM_COUNTERPARTY_BROKERAGE
alter table GCSPLATFORM_COUNTERPARTY_BROKERAGE add constraint FK_GCSPLATFORM_COUNTERPARTY_BROKERAGE_ON_COUNTERPARTY foreign key (COUNTERPARTY_ID) references GCSPLATFORM_COUNTERPARTY(ID)^
alter table GCSPLATFORM_COUNTERPARTY_BROKERAGE add constraint FK_GCSPLATFORM_COUNTERPARTY_BROKERAGE_ON_CATEGORY foreign key (CATEGORY_ID) references GCSPLATFORM_CATEGORY(ID)^
create unique index IDX_GCSPLATFORM_COUNTERPARTY_BROKERAGE_UNQ on GCSPLATFORM_COUNTERPARTY_BROKERAGE (COUNTERPARTY_ID, CATEGORY_ID, BROKERAGE_TYPE, DELETE_TS_NN) ^
create index IDX_GCSPLATFORM_COUNTERPARTY_BROKERAGE_ON_COUNTERPARTY on GCSPLATFORM_COUNTERPARTY_BROKERAGE (COUNTERPARTY_ID)^
create index IDX_GCSPLATFORM_COUNTERPARTY_BROKERAGE_ON_CATEGORY on GCSPLATFORM_COUNTERPARTY_BROKERAGE (CATEGORY_ID)^
create trigger GCSPLATFORM_COUNTERPARTY_BROKERAGE_DELETE_TS_NN_TRIGGER before update on GCSPLATFORM_COUNTERPARTY_BROKERAGE
for each row
    if not(NEW.DELETE_TS <=> OLD.DELETE_TS) then
        set NEW.DELETE_TS_NN = if (NEW.DELETE_TS is null, '1000-01-01 00:00:00.000', NEW.DELETE_TS);
    end if ;
-- end GCSPLATFORM_COUNTERPARTY_BROKERAGE
-- begin GCSPLATFORM_CATEGORY
create unique index IDX_GCSPLATFORM_CATEGORY_UNIQ_CATEGORY on GCSPLATFORM_CATEGORY (CATEGORY, DELETE_TS_NN) ^
create trigger GCSPLATFORM_CATEGORY_DELETE_TS_NN_TRIGGER before update on GCSPLATFORM_CATEGORY
for each row
    if not(NEW.DELETE_TS <=> OLD.DELETE_TS) then
        set NEW.DELETE_TS_NN = if (NEW.DELETE_TS is null, '1000-01-01 00:00:00.000', NEW.DELETE_TS);
    end if ;
-- end GCSPLATFORM_CATEGORY
-- begin GCSPLATFORM_COUNTERPARTY
alter table GCSPLATFORM_COUNTERPARTY add constraint FK_GCSPLATFORM_COUNTERPARTY_ON_LOCATION foreign key (LOCATION_ID) references GCSPLATFORM_LOCATION(ID)^
create unique index IDX_GCSPLATFORM_COUNTERPARTY_UNIQ_COUNTERPARTY on GCSPLATFORM_COUNTERPARTY (COUNTERPARTY, DELETE_TS_NN) ^
create index IDX_GCSPLATFORM_COUNTERPARTY_ON_LOCATION on GCSPLATFORM_COUNTERPARTY (LOCATION_ID)^
create trigger GCSPLATFORM_COUNTERPARTY_DELETE_TS_NN_TRIGGER before update on GCSPLATFORM_COUNTERPARTY
for each row
    if not(NEW.DELETE_TS <=> OLD.DELETE_TS) then
        set NEW.DELETE_TS_NN = if (NEW.DELETE_TS is null, '1000-01-01 00:00:00.000', NEW.DELETE_TS);
    end if ;
-- end GCSPLATFORM_COUNTERPARTY
-- begin GCSPLATFORM_CURRENCY
create unique index IDX_GCSPLATFORM_CURRENCY_UNIQ_CURRENCY on GCSPLATFORM_CURRENCY (CURRENCY, DELETE_TS_NN) ^
create trigger GCSPLATFORM_CURRENCY_DELETE_TS_NN_TRIGGER before update on GCSPLATFORM_CURRENCY
for each row
    if not(NEW.DELETE_TS <=> OLD.DELETE_TS) then
        set NEW.DELETE_TS_NN = if (NEW.DELETE_TS is null, '1000-01-01 00:00:00.000', NEW.DELETE_TS);
    end if ;
-- end GCSPLATFORM_CURRENCY
-- begin GCSPLATFORM_FX
alter table GCSPLATFORM_FX add constraint FK_GCSPLATFORM_FX_ON_CURRENCY foreign key (CURRENCY_ID) references GCSPLATFORM_CURRENCY(ID)^
create unique index IDX_GCSPLATFORM_FX_UNQ on GCSPLATFORM_FX (CURRENCY_ID, BILLING_DATE, DELETE_TS_NN) ^
create index IDX_GCSPLATFORM_FX_ON_CURRENCY on GCSPLATFORM_FX (CURRENCY_ID)^
create trigger GCSPLATFORM_FX_DELETE_TS_NN_TRIGGER before update on GCSPLATFORM_FX
for each row
    if not(NEW.DELETE_TS <=> OLD.DELETE_TS) then
        set NEW.DELETE_TS_NN = if (NEW.DELETE_TS is null, '1000-01-01 00:00:00.000', NEW.DELETE_TS);
    end if ;
-- end GCSPLATFORM_FX
-- begin GCSPLATFORM_INVOICE_LINE
alter table GCSPLATFORM_INVOICE_LINE add constraint FK_GCSPLATFORM_INVOICE_LINE_ON_TRADE foreign key (TRADE_ID) references GCSPLATFORM_CLOSED_TRADE(ID)^
create index IDX_GCSPLATFORM_INVOICE_LINE_ON_TRADE on GCSPLATFORM_INVOICE_LINE (TRADE_ID)^
-- end GCSPLATFORM_INVOICE_LINE
-- begin GCSPLATFORM_INVOICE_BANK
alter table GCSPLATFORM_INVOICE_BANK add constraint FK_GCSPLATFORM_INVOICE_BANK_ON_LOCATION foreign key (LOCATION_ID) references GCSPLATFORM_LOCATION(ID)^
alter table GCSPLATFORM_INVOICE_BANK add constraint FK_GCSPLATFORM_INVOICE_BANK_ON_CURRENCY foreign key (CURRENCY_ID) references GCSPLATFORM_CURRENCY(ID)^
alter table GCSPLATFORM_INVOICE_BANK add constraint FK_GCSPLATFORM_INVOICE_BANK_ON_BANK foreign key (BANK_ID) references GCSPLATFORM_BANK(ID)^
create unique index IDX_GCSPLATFORM_INVOICE_BANK_UNQ on GCSPLATFORM_INVOICE_BANK (CURRENCY_ID, LOCATION_ID, DELETE_TS_NN) ^
create index IDX_GCSPLATFORM_INVOICE_BANK_ON_LOCATION on GCSPLATFORM_INVOICE_BANK (LOCATION_ID)^
create index IDX_GCSPLATFORM_INVOICE_BANK_ON_CURRENCY on GCSPLATFORM_INVOICE_BANK (CURRENCY_ID)^
create index IDX_GCSPLATFORM_INVOICE_BANK_ON_BANK on GCSPLATFORM_INVOICE_BANK (BANK_ID)^
create trigger GCSPLATFORM_INVOICE_BANK_DELETE_TS_NN_TRIGGER before update on GCSPLATFORM_INVOICE_BANK
for each row
    if not(NEW.DELETE_TS <=> OLD.DELETE_TS) then
        set NEW.DELETE_TS_NN = if (NEW.DELETE_TS is null, '1000-01-01 00:00:00.000', NEW.DELETE_TS);
    end if ;
-- end GCSPLATFORM_INVOICE_BANK
-- begin GCSPLATFORM_BROKER
alter table GCSPLATFORM_BROKER add constraint FK_GCSPLATFORM_BROKER_ON_USER foreign key (USER_ID) references SEC_USER(ID)^
create unique index IDX_GCSPLATFORM_BROKER_UNIQ_USER on GCSPLATFORM_BROKER (USER_ID, DELETE_TS_NN) ^
create unique index IDX_GCSPLATFORM_BROKER_UNIQ_NAME on GCSPLATFORM_BROKER (NAME, DELETE_TS_NN) ^
create index IDX_GCSPLATFORM_BROKER_ON_USER on GCSPLATFORM_BROKER (USER_ID)^
create trigger GCSPLATFORM_BROKER_DELETE_TS_NN_TRIGGER before update on GCSPLATFORM_BROKER
for each row
    if not(NEW.DELETE_TS <=> OLD.DELETE_TS) then
        set NEW.DELETE_TS_NN = if (NEW.DELETE_TS is null, '1000-01-01 00:00:00.000', NEW.DELETE_TS);
    end if ;
-- end GCSPLATFORM_BROKER
-- begin GCSPLATFORM_TRADER
alter table GCSPLATFORM_TRADER add constraint FK_GCSPLATFORM_TRADER_ON_COUNTERPARTY foreign key (COUNTERPARTY_ID) references GCSPLATFORM_COUNTERPARTY(ID)^
create unique index IDX_GCSPLATFORM_TRADER_UNIQ_NAME on GCSPLATFORM_TRADER (NAME, DELETE_TS_NN)^
create index IDX_GCSPLATFORM_TRADER_ON_COUNTERPARTY on GCSPLATFORM_TRADER (COUNTERPARTY_ID)^
create trigger GCSPLATFORM_TRADER_DELETE_TS_NN_TRIGGER before update on GCSPLATFORM_TRADER
for each row
    if not(NEW.DELETE_TS <=> OLD.DELETE_TS) then
        set NEW.DELETE_TS_NN = if (NEW.DELETE_TS is null, '1000-01-01 00:00:00.000', NEW.DELETE_TS);
    end if ;
-- end GCSPLATFORM_TRADER
-- begin GCSPLATFORM_INVOICE
alter table GCSPLATFORM_INVOICE add constraint FK_GCSPLATFORM_INVOICE_ON_XLSX_FILE foreign key (XLSX_FILE_ID) references SYS_FILE(ID)^
alter table GCSPLATFORM_INVOICE add constraint FK_GCSPLATFORM_INVOICE_ON_PDF_FILE foreign key (PDF_FILE_ID) references SYS_FILE(ID)^
create index IDX_GCSPLATFORM_INVOICE_ON_XLSX_FILE on GCSPLATFORM_INVOICE (XLSX_FILE_ID)^
create index IDX_GCSPLATFORM_INVOICE_ON_PDF_FILE on GCSPLATFORM_INVOICE (PDF_FILE_ID)^
-- end GCSPLATFORM_INVOICE
-- begin GCSPLATFORM_INVOICE_COMPANY
alter table GCSPLATFORM_INVOICE_COMPANY add constraint FK_GCSPLATFORM_INVOICE_COMPANY_ON_LOCATION foreign key (LOCATION_ID) references GCSPLATFORM_LOCATION(ID)^
alter table GCSPLATFORM_INVOICE_COMPANY add constraint FK_GCSPLATFORM_INVOICE_COMPANY_ON_COMPANY foreign key (COMPANY_ID) references GCSPLATFORM_COMPANY(ID)^
create unique index IDX_GCSPLATFORM_INVOICE_COMPANY_UNIQ_COMPANY_ID on GCSPLATFORM_INVOICE_COMPANY (COMPANY_ID, DELETE_TS_NN) ^
create unique index IDX_GCSPLATFORM_INVOICE_COMPANY_UNIQ_LOCATION_ID on GCSPLATFORM_INVOICE_COMPANY (LOCATION_ID, DELETE_TS_NN) ^
create index IDX_GCSPLATFORM_INVOICE_COMPANY_ON_LOCATION on GCSPLATFORM_INVOICE_COMPANY (LOCATION_ID)^
create index IDX_GCSPLATFORM_INVOICE_COMPANY_ON_COMPANY on GCSPLATFORM_INVOICE_COMPANY (COMPANY_ID)^
create trigger GCSPLATFORM_INVOICE_COMPANY_DELETE_TS_NN_TRIGGER before update on GCSPLATFORM_INVOICE_COMPANY
for each row
    if not(NEW.DELETE_TS <=> OLD.DELETE_TS) then
        set NEW.DELETE_TS_NN = if (NEW.DELETE_TS is null, '1000-01-01 00:00:00.000', NEW.DELETE_TS);
    end if ;
-- end GCSPLATFORM_INVOICE_COMPANY
-- begin GCSPLATFORM_LOCATION
create unique index IDX_GCSPLATFORM_LOCATION_UNIQ_NAME on GCSPLATFORM_LOCATION (NAME, DELETE_TS_NN) ^
create trigger GCSPLATFORM_LOCATION_DELETE_TS_NN_TRIGGER before update on GCSPLATFORM_LOCATION
for each row
    if not(NEW.DELETE_TS <=> OLD.DELETE_TS) then
        set NEW.DELETE_TS_NN = if (NEW.DELETE_TS is null, '1000-01-01 00:00:00.000', NEW.DELETE_TS);
    end if ;
-- end GCSPLATFORM_LOCATION
